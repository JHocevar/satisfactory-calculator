{"version":3,"sources":["defaults.js","components/TitleBar.jsx","components/SideBar.jsx","components/ItemBox.jsx","components/ItemRow.jsx","components/ItemList.jsx","components/PageButtons.jsx","components/Recipes.jsx","components/PowerBox.jsx","app.js","index.js"],"names":["defaultItemOptions","baseOptions","fuels","coal","burnTime","powerGenerated","name","generator","fuel","turboFuel","TitleBar","className","Component","SideBar","values","this","props","materials","Object","keys","map","key","index","Fragment","type","onChange","checked","renderCheckboxes","ItemBox","items","min","value","event","onItemChange","onClick","onAddItem","onClearItem","onClearAll","renderItemBox","ItemRow","item","count","toFixed","calculateItem","itemNum","baseMaterials","ratio","produced","input1","amt1","input2","amt2","input3","amt3","input4","amt4","renderItem","renderRow","ItemList","renderList","PageButtons","Recipes","matsWithAlt","includes","renderButtons","alts","allMaterials","material","push","object","renderRecipe","PowerBox","state","fuelsAmt","renderFuels","App","handleAddItem","itemOptions","setState","updateItemsToCraft","handleClearItem","handleClearAll","handleBaseChange","baseOps","handlePageChange","pageNum","handleRecipeChange","recipeName","activeRecipes","JSON","parse","stringify","handleFuelInput","target","handleItemInput","parseFloat","baseMats","base","alt","itemsToCraft","renderPage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0c1b2531.chunk.js","sourcesContent":["const defaultItemOptions = [\r\n  \"Heavy Modular Frame\",\r\n  \"Computer\",\r\n  \"Supercomputer\",\r\n  \"Encased Industrial Beam\",\r\n  \"Modular Frame\",\r\n  \"Crystal Oscillator\",\r\n  \"Compacted Coal\",\r\n  \"Fuel\",\r\n  \"Turbofuel\",\r\n  \"Reinforced Iron Plate\",\r\n  \"Motor\",\r\n  \"Concrete\"\r\n];\r\n\r\nconst baseOptions = [\r\n  \"Iron Ingot\",\r\n  \"Copper Ingot\",\r\n  \"Caterium Ingot\",\r\n  \"Steel Ingot\",\r\n  \"Iron Plate\",\r\n  \"Iron Rod\",\r\n  \"Screw\",\r\n  \"Concrete\",\r\n  \"Wire\",\r\n  \"Quickwire\",\r\n  \"Cable\",\r\n  \"Fuel\",\r\n  \"Compacted Coal\",\r\n  \"Motor\",\r\n  \"Rotor\",\r\n  \"Stator\",\r\n  \"Plastic\",\r\n  \"Rubber\"\r\n];\r\n\r\nconst fuels = {\r\n  coal: {\r\n    burnTime: 5.4,\r\n    powerGenerated: 50,\r\n    name: \"Coal\",\r\n    generator: \"Coal Generators\"\r\n  },\r\n  \"compacted coal\": {\r\n    burnTime: 12,\r\n    powerGenerated: 50,\r\n    name: \"Compacted Coal\",\r\n    generator: \"Coal Generators\"\r\n  },\r\n  fuel: {\r\n    burnTime: 5,\r\n    powerGenerated: 150,\r\n    name: \"Fuel\",\r\n    generator: \"Fuel Generators\"\r\n  },\r\n  turboFuel: {\r\n    burnTime: 13.3,\r\n    powerGenerated: 150,\r\n    name: \"Turbo Fuel\",\r\n    generator: \"Fuel Generators\"\r\n  }\r\n};\r\n\r\nexport { defaultItemOptions, baseOptions, fuels };\r\n","import React, { Component } from \"react\";\r\n\r\nclass TitleBar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center white\">Satisfactory Calculator</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitleBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SideBar extends Component {\r\n  renderCheckboxes() {\r\n    let values = this.props.materials;\r\n    return (\r\n      <div>\r\n        {Object.keys(values).map((key, index) => (\r\n          <React.Fragment key={index}>\r\n            <span className=\"item-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={() => this.props.onChange(key)}\r\n                checked={values[key] === true}\r\n              />{\" \"}\r\n              {key}\r\n            </span>\r\n            <br />\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar white\">\r\n        <span>Base Materials</span> <br />\r\n        {this.renderCheckboxes()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ItemBox extends Component {\r\n  renderItemBox(items) {\r\n    return (\r\n      <div>\r\n        {Object.keys(items).map((key, index) => (\r\n          <React.Fragment key={index}>\r\n            <div className=\"item-box\">\r\n              <span>{key}</span>\r\n              <span> IMG </span>\r\n              <br />\r\n\r\n              <input\r\n                className=\"item-input\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                value={items[key]}\r\n                onChange={event => this.props.onItemChange(key, event)}\r\n              />\r\n              <br />\r\n              <button\r\n                className=\"btn btn-sm btn-secondary m-2\"\r\n                onClick={() => this.props.onAddItem(key)}\r\n              >\r\n                {\" Add 1 \"}\r\n              </button>\r\n              <button\r\n                className=\"btn btn-sm btn-secondary m-2\"\r\n                onClick={() => this.props.onClearItem(key)}\r\n              >\r\n                {\" Clear all \"}\r\n              </button>\r\n              <br />\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"items\">\r\n        <button\r\n          className=\"btn btn-large btn-primary mb-2\"\r\n          onClick={this.props.onClearAll}\r\n        >\r\n          Reset\r\n        </button>\r\n        <br />\r\n        {this.renderItemBox(this.props.items)}\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemBox;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ItemRow extends Component {\r\n  renderRow() {\r\n    const { item, count } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <li>{item + \" \" + count.toFixed(3)}</li>\r\n        <ol className=\"item-list\">{this.calculateItem(item, count)}</ol>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderItem(itemNum) {\r\n    const { item, count, baseMaterials, materials } = this.props;\r\n    // console.log(\"item is\", item, materials[item]);\r\n    let ratio = count / materials[item].produced;\r\n    switch (itemNum) {\r\n      case 1:\r\n        if (materials[item].input1 === null) break;\r\n        return (\r\n          <ItemRow\r\n            item={materials[item].input1}\r\n            count={ratio * materials[item].amt1}\r\n            baseMaterials={baseMaterials}\r\n            materials={materials}\r\n          />\r\n        );\r\n      case 2:\r\n        if (materials[item].input2 === null) break;\r\n        return (\r\n          <ItemRow\r\n            item={materials[item].input2}\r\n            count={ratio * materials[item].amt2}\r\n            baseMaterials={baseMaterials}\r\n            materials={materials}\r\n          />\r\n        );\r\n      case 3:\r\n        if (materials[item].input3 === null) break;\r\n        return (\r\n          <ItemRow\r\n            item={materials[item].input3}\r\n            count={ratio * materials[item].amt3}\r\n            baseMaterials={baseMaterials}\r\n            materials={materials}\r\n          />\r\n        );\r\n      case 4:\r\n        if (materials[item].input4 === null) break;\r\n        return (\r\n          <ItemRow\r\n            item={materials[item].input4}\r\n            count={ratio * materials[item].amt4}\r\n            baseMaterials={baseMaterials}\r\n            materials={materials}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  calculateItem() {\r\n    const { item, baseMaterials } = this.props;\r\n    if (baseMaterials[item] === true) {\r\n      return; // Do nothing if the item is a base item\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {this.renderItem(1)}\r\n        {this.renderItem(2)}\r\n        {this.renderItem(3)}\r\n        {this.renderItem(4)}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <React.Fragment>{this.renderRow()}</React.Fragment>;\r\n  }\r\n}\r\n\r\nexport default ItemRow;\r\n","import React, { Component } from \"react\";\r\nimport ItemRow from \"./ItemRow\";\r\n\r\nclass ItemList extends Component {\r\n  renderList(items) {\r\n    return (\r\n      <div>\r\n        {Object.keys(items).map((key, index) => (\r\n          <React.Fragment key={index}>\r\n            <ol className=\"item-list\">\r\n              <ItemRow\r\n                item={key}\r\n                count={items[key]}\r\n                baseMaterials={this.props.baseMaterials}\r\n                materials={this.props.materials}\r\n              />\r\n            </ol>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center white\">\r\n        <h3>Currently Crafting</h3>\r\n        {this.renderList(this.props.items)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ItemList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass PageButtons extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center m-2\">\r\n        <button\r\n          className=\"btn btn-primary btn-sm m-1\"\r\n          onClick={() => this.props.onClick(1)}\r\n        >\r\n          Crafting\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-sm m-1\"\r\n          onClick={() => this.props.onClick(2)}\r\n        >\r\n          Recipies\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary btn-sm m-1\"\r\n          onClick={() => this.props.onClick(3)}\r\n        >\r\n          Power\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageButtons;\r\n","import React, { Component } from \"react\";\r\nimport allMaterials from \"../materials.json\";\r\n\r\nclass Recipes extends Component {\r\n  renderRecipe(key) {\r\n    let { matsWithAlt } = this.props;\r\n    if (matsWithAlt.includes(key)) {\r\n      return (\r\n        <div className=\"recipe-box\" key={key}>\r\n          <h5 className=\"text-center\">{key}</h5>\r\n          {this.renderButtons(key)}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderButtons(item) {\r\n    let alts = [];\r\n    for (let key in allMaterials) {\r\n      if (allMaterials[key].item === item) {\r\n        let material = allMaterials[key];\r\n        material.name = key;\r\n        alts.push(material);\r\n      }\r\n    }\r\n\r\n    return alts.map((object, name) => {\r\n      return (\r\n        <div className=\"contain\" key={name}>\r\n          <label className=\"ml-2\">\r\n            <input\r\n              type=\"radio\"\r\n              name={item}\r\n              value=\"object.name\"\r\n              onChange={() => this.props.onChange(object.name, item)}\r\n              checked={this.props.materials[object.item].name === object.name}\r\n            />\r\n            {object.name}\r\n            <br />\r\n          </label>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"recipes\">\r\n        {Object.keys(this.props.materials).map(key => {\r\n          return this.renderRecipe(key);\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recipes;\r\n","import React, { Component } from \"react\";\r\nimport { fuels } from \"../defaults\";\r\n\r\nclass PowerBox extends Component {\r\n  state = {};\r\n\r\n  renderFuels() {\r\n    return (\r\n      <div>\r\n        {Object.keys(fuels).map((key, index) => (\r\n          <div className=\"fuels\" key={index}>\r\n            <div className=\"fuel-row\">\r\n              <label className=\"fuel-title\">{fuels[key].name}</label>\r\n              <input\r\n                className=\"fuel-input\"\r\n                type=\"number\"\r\n                min=\"0\"\r\n                value={this.props.fuelsAmt[key]}\r\n                onChange={event => this.props.onChange(key, event)}\r\n              />\r\n              <label className=\"fuel-text\">\r\n                {\"Using \" +\r\n                  \" \" +\r\n                  (\r\n                    (this.props.fuelsAmt[key] * fuels[key].burnTime) /\r\n                    60\r\n                  ).toFixed(3) +\r\n                  \" \" +\r\n                  fuels[key].generator}\r\n              </label>\r\n              <span>\r\n                {\"Producing: \" +\r\n                  (\r\n                    ((this.props.fuelsAmt[key] * fuels[key].burnTime) / 60) *\r\n                    fuels[key].powerGenerated\r\n                  ).toFixed(3) +\r\n                  \" MW\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderFuels()}</div>;\r\n  }\r\n}\r\n\r\nexport default PowerBox;\r\n","import React, { Component } from \"react\";\r\nimport { defaultItemOptions, baseOptions, fuels } from \"./defaults\";\r\nimport materials from \"./materials.json\";\r\nimport TitleBar from \"./components/TitleBar\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport ItemBox from \"./components/ItemBox\";\r\nimport ItemList from \"./components/ItemList\";\r\nimport PageButtons from \"./components/PageButtons\";\r\nimport Recipes from \"./components/Recipes\";\r\nimport PowerBox from \"./components/PowerBox\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    let itemOptions = {};\r\n    for (let index in defaultItemOptions) {\r\n      itemOptions[defaultItemOptions[index]] = 0;\r\n    }\r\n\r\n    let baseMats = {};\r\n    for (let index in baseOptions) {\r\n      baseMats[baseOptions[index]] = true;\r\n    }\r\n\r\n    let baseMaterials = {};\r\n    let activeRecipes = {};\r\n    let matsWithAlt = [];\r\n    for (let key in materials) {\r\n      baseMaterials[key] = materials[key].base;\r\n      if (Object.keys(baseMats).includes(key)) {\r\n        baseMaterials[key] = baseMats[key];\r\n      }\r\n      if (materials[key].alt === false) {\r\n        activeRecipes[key] = materials[key];\r\n      } else if (!matsWithAlt.includes(materials[key].item)) {\r\n        matsWithAlt.push(materials[key].item);\r\n      }\r\n    }\r\n\r\n    let fuel = {};\r\n    Object.keys(fuels).map((key, index) => {\r\n      fuel[key] = 0;\r\n      return null;\r\n    });\r\n\r\n    this.state = {\r\n      matsWithAlt: matsWithAlt,\r\n      activeRecipes: activeRecipes, // The current list of active recipies, starts out with no alternative recipies\r\n      baseMaterials: baseMaterials,\r\n      baseOptions: baseMats,\r\n      itemOptions: itemOptions,\r\n      itemsToCraft: {},\r\n      pageNum: 1,\r\n      fuels: fuel\r\n    };\r\n  }\r\n\r\n  updateItemsToCraft() {\r\n    const itemOptions = this.state.itemOptions;\r\n    let itemsToCraft = {};\r\n\r\n    for (let key in itemOptions) {\r\n      if (itemOptions[key] > 0) {\r\n        itemsToCraft[key] = itemOptions[key];\r\n      }\r\n    }\r\n\r\n    this.setState({ itemsToCraft: itemsToCraft });\r\n  }\r\n\r\n  handleAddItem = item => {\r\n    let items = this.state.itemOptions;\r\n    items[item] = items[item] + 1;\r\n    this.setState({ itemOptions: items });\r\n    this.updateItemsToCraft();\r\n  };\r\n\r\n  handleClearItem = item => {\r\n    let items = this.state.itemOptions;\r\n    items[item] = 0;\r\n    this.setState({ itemOptions: items });\r\n    this.updateItemsToCraft();\r\n  };\r\n\r\n  handleClearAll = () => {\r\n    let itemOptions = this.state.itemOptions;\r\n    for (var key in itemOptions) {\r\n      itemOptions[key] = 0;\r\n    }\r\n    this.setState({ itemOptions: itemOptions });\r\n    this.updateItemsToCraft();\r\n  };\r\n\r\n  handleBaseChange = material => {\r\n    let baseMaterials = this.state.baseMaterials;\r\n    baseMaterials[material] = !baseMaterials[material];\r\n\r\n    let baseOps = this.state.baseOptions;\r\n    baseOps[material] = !baseOps[material];\r\n\r\n    this.setState({ baseMaterials: baseMaterials, baseOptions: baseOps });\r\n  };\r\n\r\n  handlePageChange = pageNum => {\r\n    this.setState({ pageNum: pageNum });\r\n  };\r\n\r\n  handleRecipeChange = (recipeName, item) => {\r\n    let activeRecipes = JSON.parse(JSON.stringify(this.state.activeRecipes));\r\n    activeRecipes[item] = materials[recipeName];\r\n    this.setState({ activeRecipes: activeRecipes });\r\n  };\r\n\r\n  handleFuelInput = (generator, event) => {\r\n    let fuels = JSON.parse(JSON.stringify(this.state.fuels));\r\n    fuels[generator] = event.target.value;\r\n    if (fuels[generator] === \"\") {\r\n      fuels[generator] = 0;\r\n    }\r\n    this.setState({ fuels: fuels });\r\n  };\r\n\r\n  handleItemInput = (item, event) => {\r\n    let items = this.state.itemOptions;\r\n    items[item] = parseFloat(event.target.value);\r\n    if (items[item] === \"\") {\r\n      items[item] = 0;\r\n    }\r\n    this.setState({ itemOptions: items });\r\n    // console.log(\"updated\");\r\n    this.updateItemsToCraft();\r\n    // console.log(\"updated item to\", event.target.value);\r\n  };\r\n\r\n  renderPage() {\r\n    switch (this.state.pageNum) {\r\n      case 1:\r\n        return (\r\n          <React.Fragment>\r\n            <SideBar\r\n              materials={this.state.baseOptions}\r\n              onChange={this.handleBaseChange}\r\n            />\r\n            <ItemBox\r\n              items={this.state.itemOptions}\r\n              onAddItem={this.handleAddItem}\r\n              onClearItem={this.handleClearItem}\r\n              onClearAll={this.handleClearAll}\r\n              onItemChange={this.handleItemInput}\r\n            />\r\n            <div className=\"item-list-wrapper\">\r\n              <ItemList\r\n                items={this.state.itemsToCraft}\r\n                baseMaterials={this.state.baseMaterials}\r\n                materials={this.state.activeRecipes}\r\n              />\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      case 2:\r\n        return (\r\n          <React.Fragment>\r\n            <Recipes\r\n              materials={this.state.activeRecipes}\r\n              matsWithAlt={this.state.matsWithAlt}\r\n              onChange={this.handleRecipeChange}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      case 3:\r\n        return (\r\n          <React.Fragment>\r\n            <PowerBox\r\n              onChange={this.handleFuelInput}\r\n              fuelsAmt={this.state.fuels}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      default:\r\n        // Should never reach\r\n        return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"rendering\");\r\n    return (\r\n      <div>\r\n        <TitleBar />\r\n        <PageButtons onClick={this.handlePageChange} />\r\n        {this.renderPage()}\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}